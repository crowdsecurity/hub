name: test-configurations
on:
  - push
  - repository_dispatch
  - pull_request_target
jobs:
  build-hub-tests:
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
    - name: clone hub-tests
      uses: actions/checkout@v2
      with:
        repository: crowdsecurity/hub-tests
        ref: wip
        path: hub-tests
    - name: build
      run: cd hub-tests && go build && cd .. && find .
    - name: run tests
      run: |
        cp hub-tests/dev.yaml .
        ## ugly workarounds
        mkdir -p config/hub
        touch config/simulation.yaml
        cp .index.json config/hub
        cp -a hub-tests/config/patterns config
        set -x
        for i in $(find . -path ./hub-tests -prune -o -name config.yaml -print|tr '\n' ' ') ;
        do
         ./hub-tests/hub-tests -target $(dirname $i) -junit output.xml ;
        done
        set +x
        pwd
        mkdir ../test-reports
        mv output.xml ../test-reports/output.xml
      id: tests
    - name: XUnit Viewer
      id: xunit-viewer
      uses: AutoModality/action-xunit-viewer@v1
      if: always()
    - name: Attach the report
      uses: actions/upload-artifact@v1
      if: always()
      with:
        name: test-reports
        path: ${{ steps.xunit-viewer.outputs.report-dir }}

        
