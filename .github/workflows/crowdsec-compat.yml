name: Hub-CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    strategy:
      matrix:
        csrelease: ["v0.1.4"]
    name: Hub/Crowdsec ${{matrix.csrelease}} compatibility tests
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go
    - name: fetch and extract release
      run: |
        wget --quiet https://github.com/crowdsecurity/crowdsec/releases/download/${{matrix.csrelease}}/crowdsec-release.tgz
        mkdir crowdsec-release
        tar xvzf crowdsec-release.tgz -C ./crowdsec-release --strip 1
        cd crowdsec-release && ./test_env.sh
        cd tests/
    - name: fetch hub ci
      working-directory: ./crowdsec-release/tests/
      run: |
        git clone https://github.com/crowdsecurity/hub-tests.git
        cd hub-tests
        go mod edit -replace github.com/crowdsecurity/crowdsec=github.com/crowdsecurity/crowdsec@${{matrix.csrelease}}
        make
        bash ./prep_tests.sh
    - name: Run the tests
      working-directory: crowdsec-release/tests/
      run: |
        for i in `find ./tests -mindepth 1 -maxdepth 1 -type d` ; do 
          echo "::group::Test-${i}" ; 
          ./main $i || (echo "::error file=${i}::Failed test for ${i}, diff :" ; diff ${i}"/results.yaml" ${i}"/results.yaml.fail" ; sha256sum ${i}"/results.yaml" ; sha256sum ${i}"/results.yaml.fail"; exit 1) ;
          echo "::endgroup::" ;
        done ;
#upload artifacts in case of failure
    - name: Upload tests results
      uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: tests-results
        path: ./crowdsec-release/tests/tests/

