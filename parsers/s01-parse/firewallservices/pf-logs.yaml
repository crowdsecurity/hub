# For more information see
# https://github.com/opnsense/ports/blob/master/opnsense/filterlog/files/description.txt
# and
# https://docs.netgate.com/pfsense/en/latest/monitoring/logs/raw-filter-format.html
filter: "evt.Parsed.program == 'filterlog' or evt.Parsed.message matches '^filterlog:'"
name: firewallservices/pf-logs
description: "Parse packet filter logs"
format: 2.0
pattern_syntax:
  # WORD including special characters
  PF_WORD: '%{USERNAME}'
  
  # rulenr, subrulenr, anchorname, label | "0", interface, reason, action, dir
  PF_BASE: '%{INT:rule},(%{INT:sub_rule})?,(%{WORD:anchorname})?,(%{WORD:tracker}| 0),%{PF_WORD:iface},%{WORD:reason},%{WORD:action},%{WORD:direction}'

  # tos, ecn, ttl, id, offset, flags, protonum, protoname, length, src, dst
  PF_IPV4_DATA: '%{BASE16NUM:ip4_tos},(%{INT:ip4_ecn})?,%{INT:ip4_ttl},%{INT:ip4_id},%{INT:ip4_offset},%{WORD:ip4_flags},%{INT:ip4_proto_id},%{WORD:ip4_proto}'
  # class, flow, hoplimit, protoname, protonum
  PF_IPV6_DATA: '%{BASE16NUM:ip6_class},%{BASE16NUM:ip6_flow_label},%{INT:ip6_hop_limit},%{WORD:ip6_proto},%{INT:ip6_proto_id}'
  # ipversion, ..., length, src, dst
  PF_IP: '%{INT:ip_ver},(%{PF_IPV4_DATA}|%{PF_IPV6_DATA}),%{INT:length},%{IP:src_ip},%{IP:dst_ip}'

  # srcport, dstport, datalen
  PF_UDP_DATA: '%{POSINT:src_port},%{POSINT:dst_port},%{INT:data_length}'
  # srcport, dstport, datalen, flags, seq, ack, window, urg, options
  PF_TCP_DATA: '%{WORD:tcp_flags},%{INT:sequence_number},(?:%{INT:ack_number})?,%{INT:tcp_window},(%{DATA:urg_data})?,%{GREEDYDATA:tcp_options}'
  # both protocols start with the same three values
  PF_PROTOCOL: '%{PF_UDP_DATA}(,%{PF_TCP_DATA})?'
grok:
  pattern: "%{PF_BASE},%{PF_IP},%{PF_PROTOCOL}"
  apply_on: message
statics:
  - meta: log_type
    value: pf
---
filter: "evt.Meta.log_type == 'pf' and evt.Parsed.action == 'block'"
name: firewallservices/pf-logs-drop
description: "Identify dropped packets"
onsuccess: next_stage
statics:
  - meta: service
    expression: "evt.Parsed.ip4_proto != nil ? evt.Parsed.ip4_proto : evt.Parsed.ip6_proto"
  - meta: log_type
    value: pf_drop
  - meta: source_ip
    expression: "evt.Parsed.src_ip"
