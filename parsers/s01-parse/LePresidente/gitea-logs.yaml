onsuccess: next_stage
#debug: false
name: LePresidente/gitea-logs
filter: "evt.Parsed.program == 'gitea'"
description: "Parse gitea logs"
pattern_syntax:
  GITEA_CUSTOMUSER: "(%{EMAILADDRESS}|%{USERNAME})"
  GITEA_CUSTOMDATE: "%{DATE_X} %{TIME}"
nodes:
  - grok:
      pattern: '^%{GITEA_CUSTOMDATE:timestamp}.*?Failed authentication attempt for %{GITEA_CUSTOMUSER:username} from %{IP:remote_ip}:%{NUMBER:remote_port}.* user does not exist'
      apply_on: message
      statics:
        - meta: log_type
          value: gitea_failed_auth
  - grok:
      pattern: '^%{GITEA_CUSTOMDATE:timestamp}.*?Failed authentication attempt for %{GITEA_CUSTOMUSER:username} from \[%{IP:remote_ip}\].* user does not exist' 
      apply_on: message
      statics:
        - meta: log_type
          value: gitea_failed_auth
  - grok:
      pattern: '^%{GITEA_CUSTOMDATE:timestamp}.*?Failed authentication attempt from %{IP:remote_ip}:%{NUMBER:remote_port}'
      apply_on: message
      statics:
        - meta: log_type
          value: gitea_failed_auth
  - grok:
      pattern: '^%{GITEA_CUSTOMDATE:timestamp}.*?Failed authentication attempt from \[%{IP:remote_ip}\]'
      apply_on: message
      statics:
        - meta: log_type
          value: gitea_failed_auth
  - grok:
      pattern: "^%{GITEA_CUSTOMDATE:timestamp}.*?Failed authentication attempt for %{GITEA_CUSTOMUSER:username} from %{IP:remote_ip}:%{NUMBER:remote_port}.* user's password is invalid"
      apply_on: message
      statics:
        - meta: log_type
          value: gitea_failed_auth

statics:
    - meta: service
      value: gitea
    - meta: user
      expression: "evt.Parsed.username"
    - target: evt.StrTime
      expression: evt.Parsed.timestamp
    - meta: source_ip
      expression: "evt.Parsed.remote_ip"
