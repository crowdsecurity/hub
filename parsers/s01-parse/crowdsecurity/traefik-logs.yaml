# co-authored with gmelodie (https://github.com/gmelodie)
name: crowdsecurity/traefik-logs
description: "Parse Traefik access logs"
filter: "evt.Parsed.program startsWith 'traefik'"
#debug: true
onsuccess: next_stage
pattern_syntax:
  TRAEFIK_ROUTER: '(%{USER}@%{URIHOST}|\-)'
  TRAEFIK_SERVER_URL: '(%{URI}|\-)'
  NUMBER_MINUS: '[0-9-]+'
  NGINXACCESS2: '%{IPORHOST:remote_addr} - %{NGUSER:remote_user} \[%{HTTPDATE:time_local}\] "%{WORD:verb} %{DATA:request} HTTP/%{NUMBER:http_version}" %{NUMBER_MINUS:status} %{NUMBER_MINUS:body_bytes_sent} "%{NOTDQUOTE:http_referer}" "%{NOTDQUOTE:http_user_agent}"'
nodes:
  - grok: # CLF parser
      pattern: '%{NGINXACCESS2} %{NUMBER:number_of_requests_received_since_traefik_started} "%{TRAEFIK_ROUTER:traefik_router_name}" "%{TRAEFIK_SERVER_URL:traefik_server_url}" %{NUMBER:request_duration_in_ms}ms'
      apply_on: message
    onsuccess: next_stage
  - grok:
    nodes:
      - grok:
          pattern: '%{IPORHOST:remote_addr}'
          expression: JsonExtract(evt.Parsed.message, "ClientAddr")
      - grok:
          pattern: '%{IPORHOST:dest_addr}'
          expression: JsonExtract(evt.Parsed.message, "ClientAddr")
      - grok:
          pattern: '%{IPORHOST:request_addr}'
          expression: JsonExtract(evt.Parsed.message, "RequestAddr")
      - grok:
          pattern: '%{USERNAME:service_addr}'
          expression: JsonExtract(evt.Parsed.message, "ServiceAddr")
      - grok:
          pattern: '%{USERNAME:http_user_agent}'
          expression: JsonExtract(evt.Parsed.message, "request_User-Agent")
      - grok:
          pattern: '%{NUMBER:body_bytes_sent}'
          expression: JsonExtract(evt.Parsed.message, "DownstreamContentSize")
      - grok:
          pattern: '%{NUMBER:request_duration_in_ms}'
          expression: JsonExtract(evt.Parsed.message, "Duration")
      - grok:
          pattern: '%{TRAEFIK_ROUTER:traefik_router_name}'
          expression: JsonExtract(evt.Parsed.message, "RouterName")
      - grok:
          pattern: '%{GREEDYDATA:time_local}'
          expression: JsonExtract(evt.Parsed.message, "time")
      - grok:
          pattern: '%{GREEDYDATA:verb}'
          expression: JsonExtract(evt.Parsed.message, "RequestMethod")
      - grok:
          pattern: '%{GREEDYDATA:request}'
          expression: JsonExtract(evt.Parsed.message, "RequestPath")
      - grok:
          pattern: 'HTTP/%{NUMBER:http_version}'
          expression: JsonExtract(evt.Parsed.message, "RequestProtocol")
      - grok:
          pattern: '%{NUMBER:status}'
          expression: JsonExtract(evt.Parsed.message, "DownstreamStatus")
statics:
  - meta: service
    value: http
  - meta: http_status
    expression: "evt.Parsed.status"
  - meta: http_path
    expression: "evt.Parsed.request"
  - meta: user
    expression: "evt.Parsed.remote_user"
  - meta: source_ip
    expression: "evt.Parsed.remote_addr"
  - meta: log_type
    value: http_access-log
  - target: evt.StrTime
    expression: "evt.Parsed.time_local"
  - meta: traefik_router_name
    expression: "evt.Parsed.traefik_router_name"
