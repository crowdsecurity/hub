onsuccess: next_stage
#debug: true
name: crowdsecurity/laurel-logs
description: "Parse laurel json logs"
## 1.5.2 returns "" , 1.5.3 returns nil
filter: evt.Parsed.program == 'laurel'
pattern_syntax:
  FLOAT: '[0-9\.]+'
nodes:
  - filter: UnmarshalJSON(evt.Parsed.message, evt.Unmarshaled, "laurel") in ["", nil]
    grok:
      pattern: '%{FLOAT:timestamp}:%{INT:event_inc_id}'
      expression: evt.Unmarshaled.laurel.ID
statics:
  - meta: service
    value: laurel
  - meta: log_type
    expression: evt.Unmarshaled.laurel.SYSCALL.SYSCALL
  - target: evt.StrTime
    expression: evt.Parsed.timestamp
  - meta: exe
    expression: evt.Unmarshaled.laurel.SYSCALL.exe
  - meta: uid
    expression: int(evt.Unmarshaled.laurel.SYSCALL.uid)
  - meta: auditd_eventid
    expression: evt.Parsed.event_inc_id
  - meta: parent_progname
    expression: evt.Unmarshaled.laurel.SYSCALL.PPID.exe
  - meta: ppid
    expression: int(evt.Unmarshaled.laurel.SYSCALL.ppid)
  - meta: auid
    expression: int(evt.Unmarshaled.laurel.SYSCALL.auid)
  - meta: tty
    expression: evt.Unmarshaled.laurel.SYSCALL.tty
