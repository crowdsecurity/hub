onsuccess: next_stage
#debug: true
filter: "evt.Parsed.program == 'mikrotik'"
name: a1ad/mikrotik-logs
description: "Parse Mikrotik logs"
pattern_syntax:
  MIKROTIK_FIREWALL_DROP: "(%{SYSLOGTIMESTAMP:timestamp}|%{TIMESTAMP_ISO8601:timestamp}) %{HOSTNAME:device_name} %{DATA:action}: in:%{DATA:if_in} out:%{DATA:if_out}(, packet-mark:%{DATA:packet_mark})?(, connection-mark:%{DATA:connection_mark})? connection-state:%{DATA:connection_state}( src-mac %{MAC:src_mac})?(, )?proto %{WORD:proto}( \\(%{DATA:proto_detail}(, type %{INT:icmp_type}, code %{INT:icmp_code})?)\\)?, %{IP:source_ip}:%{INT:src_port}->%{IP:dst_ip}:%{INT:dst_port}(, len %{INT:length})?"
  MIKROTIK_AUTH_FAILED: "(%{SYSLOGTIMESTAMP:timestamp}|%{TIMESTAMP_ISO8601:timestamp}) %{HOSTNAME} (AUTH_FAILED: )?login: failure for user %{USERNAME:invalid_user} from (%{MAC:source_mac}|%{IP:source_ip}) via %{DATA:application}"
nodes:
  - grok:
     name: "MIKROTIK_FIREWALL_DROP"
     apply_on: message
    statics:
      - meta: service
        value: tcp_udp
      - meta: log_type
        value: mikrotik_drop
      - meta: dst_port
        expression: "evt.Parsed.dst_port"
  - grok:
     name : "MIKROTIK_AUTH_FAILED"
     apply_on: message
    statics:
      - meta: service
        value: mikrotik
      - meta: log_type
        value: mikrotik_failed_auth
      - meta: user
        expression: "evt.Parsed.invalid_user"
statics:
 - meta: source_ip
   expression: "evt.Parsed.source_ip"
 - target: evt.StrTime
   expression: evt.Parsed.timestamp
