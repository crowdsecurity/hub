onsuccess: next_stage
filter: "Upper(evt.Parsed.program) == 'GITLAB'"
name: timokoessler/gitlab-logs
description: "Parse GitLab Logs"
nodes:
  - nodes:
      - grok:
          pattern: '%{IP:source_ip}'
          expression: JsonExtract(evt.Parsed.message, "remote_ip")
      - grok: 
          pattern: '%{RFC3339:timestamp}'
          expression: JsonExtract(evt.Parsed.message, "time")
statics:
    - meta: service
      value: gitlab
    - meta: source_ip
      expression: "evt.Parsed.source_ip"
    - target: evt.StrTime
      expression: "evt.Parsed.timestamp"
    - meta: log_type
      expression: "(JsonExtract(evt.Parsed.message, 'method') == 'POST' && (JsonExtract(evt.Parsed.message, 'path') in ['/users/sign_in', '/users/auth/ldapmain/callback'])) ? ((JsonExtract(evt.Parsed.message, 'status') == '0' || JsonExtract(evt.Parsed.message, 'action') == 'failure') ? 'gitlab_failed_password': (JsonExtract(evt.Parsed.message, 'status') == '200' && (JsonExtract(evt.Parsed.message, 'params') contains 'otp_attempt')) ? 'gitlab_failed_totp' : '') : ''"
    - meta: username
      expression: "(evt.Meta.log_type == 'gitlab_failed_password') ? (JsonExtract(evt.Parsed.message, 'params[1].value.login')) : ''"