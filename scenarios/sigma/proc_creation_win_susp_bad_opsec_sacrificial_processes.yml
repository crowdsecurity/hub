type: trigger
name: sigma/proc_creation_win_susp_bad_opsec_sacrificial_processes
description: |
  Detects attackers using tooling with bad opsec defaults.
  E.g. spawning a sacrificial process to inject a capability into the process without taking into account how the process is normally run.
  One trivial example of this is using rundll32.exe without arguments as a sacrificial process (default in CS, now highlighted by c2lint), running WerFault without arguments (Kraken - credit am0nsec), and other examples.
  
filter: |
  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\WerFault.exe' && evt.Parsed.CommandLine endsWith 'WerFault.exe' || evt.Parsed.Image endsWith '\\rundll32.exe' && evt.Parsed.CommandLine endsWith 'rundll32.exe' || evt.Parsed.Image endsWith '\\regsvcs.exe' && evt.Parsed.CommandLine endsWith 'regsvcs.exe' || evt.Parsed.Image endsWith '\\regasm.exe' && evt.Parsed.CommandLine endsWith 'regasm.exe' || evt.Parsed.Image endsWith '\\regsvr32.exe' && evt.Parsed.CommandLine endsWith 'regsvr32.exe') && not (evt.Parsed.ParentImage startsWith 'C:\\Users\\' && evt.Parsed.ParentImage contains '\\AppData\\Local\\Microsoft\\EdgeUpdate\\Install\\{' && evt.Parsed.ParentImage endsWith '\\setup.exe' && evt.Parsed.ParentCommandLine contains '\\setup.exe" --install-archive="C:\\Users\\'))
blackhole: 2m
#status: experimental
labels:
  service: windows
  confidence: 0
  spoofable: 0
#  classification:
#  - attack.t1218.011

  label: "Bad Opsec Defaults Sacrificial Processes With Improper Arguments"
  behavior : "windows:audit"
  remediation: false

scope:
  type: ParentProcessId
  expression: evt.Parsed.ParentProcessId

