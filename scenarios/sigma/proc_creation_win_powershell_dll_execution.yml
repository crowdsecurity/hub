type: trigger
name: sigma/proc_creation_win_powershell_dll_execution
description: |
  Detects potential PowerShell execution from a DLL instead of the usual PowerShell process as seen used in PowerShdll
filter: |
  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\rundll32.exe' || evt.Parsed.Image endsWith '\\regsvcs.exe' || evt.Parsed.Image endsWith '\\InstallUtil.exe' || evt.Parsed.Image endsWith '\\regasm.exe' || evt.Parsed.OriginalFileName == 'RUNDLL32.EXE' || evt.Parsed.OriginalFileName == 'RegSvcs.exe' || evt.Parsed.OriginalFileName == 'InstallUtil.exe' || evt.Parsed.OriginalFileName == 'RegAsm.exe') && (evt.Parsed.CommandLine contains 'Default.GetString' || evt.Parsed.CommandLine contains 'FromBase64String' || evt.Parsed.CommandLine contains 'Invoke-Expression' || evt.Parsed.CommandLine contains 'IEX ' || evt.Parsed.CommandLine contains 'Invoke-Command' || evt.Parsed.CommandLine contains 'ICM ' || evt.Parsed.CommandLine contains 'DownloadString'))
blackhole: 2m
#status: test
labels:
  service: windows
  confidence: 1
  spoofable: 0
#  classification:
#  - attack.t1218.011

  label: "Potential PowerShell Execution Via DLL"
  behavior : "windows:audit"
  remediation: false

scope:
  type: ParentProcessId
  expression: evt.Parsed.ParentProcessId

